Hotkeys: 
    - Shift+ Alt+A -> коментирование строк js
    - Shift+ Alt+A -> форматирование кода


/* 1. Модули css (создание уникальных классов): */

import s from './Dialogs.module.css';

	/* и применяем:  */

const Dialogs = (props) => {
    return (

        <div className={s.dia}>Dialogs</div>

    )
}

	/* а в Dialogs.module.css сидит класс dia: */

.dia {
	
	color: black;
}

_______________________________

/* 2. Props func: */

В функции вписываем в скобках props и применяем входящие данные в div:

const Post = (props) => {

    return (

        <div className={s.item}>
            <img src='https://encrypted-tbn0.com/>

            <div className={s.one_post}>
                {props.message} /* Применяем данные от message */
            </div>

            <div>
                <span>like {props.like_count} </span> /* Применяем данные от like_count */
            </div>

        </div >

    )

}

	/* а входящие данные пишем в файле где применяем компоненту: */
	
	
			<div>

                <Post message='HI, how are you?' like_count='3' />
                <Post message='HI men yeahh?' like_count='5' />

            </div>

_______________________________


/* 3. Routing */

Устанавливаем модуль react-route-dom:

npm install react-router-dom -save (по камасутре, с записью в package.json - "react-router-dom": "^6.2.1",)
затем на других компах нужно доустановить модуль react-router-dom через npm install.

npm install react-router-dom@6 (по документации)


import {BrowserRouter, Routes, Route} from "react-router-dom";	/* Обазательно */

function App() {
  return (
  
	<BrowserRouter> /* Обазательно */
	
		<div class='app-wrapper-content'>
		
		<Routes>	/* Обазательно */
			
			<Route path='/Profile' element={<Profile />} />	/* Отрисовываем компоненту по пути */
			<Route path='/Dialogs' element={<Dialogs />} />	/* Отрисовываем компоненту по пути */
			
		</Routes>	/* Обазательно */
		
		</div>
			
	</BrowserRouter>)	/* Обазательно */
}


export default App;

/* 3.1. Active Link. Документация - https://v5.reactrouter.com/web/api/NavLink */

В файле меню (Navbar.jsx) ввести:
<div className={s.item}> <NavLink exact to='/Main' className = { navData => navData.isActive ? s.active : s.item }>Главная</NavLink></div>

Предварительно установив и импортировав: import { NavLink } from 'react-router-dom';
Предварительно не забыть импортировать модули из css: import s from './Navbar.module.css';

В файле Navbar.module.jsx оформить стили для .item (пассивная ссылка) и .active (активная ссылка):

.item {
    color: black;
    
.active {
    color: green;
    font-weight: 800;
}

a:hover {
    color: red; /*ЭТО ПОДСВЕТКА ПРИ НАВЕДЕНИИ*/

/* 4. Данные в массиве для компонент:

    let messagesdata = [
        { id: 1, message: '-> How are you?' },
        { id: 2, message: '-> How are they?' }

    Теперь используем их в компоненте:

        <div className={s.messages}>
                <Messageitem mes={messagesdata[0].message} id={messagesdata[0].id} />
                <Messageitem mes={messagesdata[1].message} id={messagesdata[1].id} />
        </div>


/* 4.1 Массив данных --> массив разметки (метод массива MAP):

    let dialogsdata = [                 ЭТО ЕСТЬ НАШ МАССИВ ДАННЫХ
        { id: 1, name: 'Димыч' },
        { id: 2, name: 'Юрмэлло' },
        { id: 3, name: 'Стасямба' },
        { id: 4, name: 'ДэЛавер' },
        { id: 5, name: 'Илиолик' }
    ]

            ПРЕОБРАЗУЕМ МАССИВ ДАННЫХ В МАССИВ КОМПОНЕНТ,КОТОРЫЕ НУЖНО ОТРИСОВАТЬ.
            И ПЕРЕДАЕМ ПРОПСЫ - NAME, ID ИЗ МАССИВА ДАННЫХ.

    let dialogselements = dialogsdata.map
    (dialog => <Dialogitem name={dialog.name} id={dialog.id} />);

